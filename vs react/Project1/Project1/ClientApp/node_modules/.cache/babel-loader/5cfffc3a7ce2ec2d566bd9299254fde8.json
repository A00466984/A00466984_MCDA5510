{"ast":null,"code":"var _jsxFileName = \"E:\\\\MCDA\\\\vs react\\\\Project1\\\\Project1\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  } //static renderForecastsTable(forecasts) {\n  //  return (\n  //    <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n  //      <thead>\n  //        <tr>\n  //          <th>Date</th>\n  //          <th>Temp. (C)</th>\n  //          <th>Temp. (F)</th>\n  //          <th>Summary</th>\n  //        </tr>\n  //      </thead>\n  //      <tbody>\n  //        {forecasts.map(forecast =>\n  //          <tr key={forecast.date}>\n  //            <td>{forecast.date}</td>\n  //            <td>{forecast.temperatureC}</td>\n  //            <td>{forecast.temperatureF}</td>\n  //            <td>{forecast.summary}</td>\n  //          </tr>\n  //        )}\n  //      </tbody>\n  //    </table>\n  //  );\n  //}\n\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : FetchData.renderForecastsTable(this.state.forecasts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateWeatherData() {\n    const response = await fetch('weatherforecast');\n    const data = await response.json();\n    this.setState({\n      forecasts: data,\n      loading: false\n    });\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["E:/MCDA/vs react/Project1/Project1/ClientApp/src/components/FetchData.js"],"names":["React","Component","FetchData","constructor","props","state","forecasts","loading","componentDidMount","populateWeatherData","render","contents","renderForecastsTable","response","fetch","data","json","setState","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAGvCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL;AACD,GAVsC,CAYvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWE,OAAX,gBACX;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YADW,GAEXL,SAAS,CAACU,oBAAV,CAA+B,KAAKP,KAAL,CAAWC,SAA1C,CAFJ;AAIA,wBACE;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGK,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEwB,QAAnBF,mBAAmB,GAAG;AAC1B,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,SAAS,EAAES,IAAb;AAAmBR,MAAAA,OAAO,EAAE;AAA5B,KAAd;AACD;;AAvDsC;AAA5BL,S,CACJgB,W,GAAchB,SAAS,CAACiB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  //static renderForecastsTable(forecasts) {\r\n  //  return (\r\n  //    <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n  //      <thead>\r\n  //        <tr>\r\n  //          <th>Date</th>\r\n  //          <th>Temp. (C)</th>\r\n  //          <th>Temp. (F)</th>\r\n  //          <th>Summary</th>\r\n  //        </tr>\r\n  //      </thead>\r\n  //      <tbody>\r\n  //        {forecasts.map(forecast =>\r\n  //          <tr key={forecast.date}>\r\n  //            <td>{forecast.date}</td>\r\n  //            <td>{forecast.temperatureC}</td>\r\n  //            <td>{forecast.temperatureF}</td>\r\n  //            <td>{forecast.summary}</td>\r\n  //          </tr>\r\n  //        )}\r\n  //      </tbody>\r\n  //    </table>\r\n  //  );\r\n  //}\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}